name: CI-CD GithubActions

on:
  push:
    branches: [ "main", "homolog" ]

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - run: chmod +x mvnw

      - run: ./mvnw clean package -DskipTests

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v4

      - name: Define environment TAG
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF_NAME}" == "homolog" ]]; then
            echo "TAG=latest-homolog" >> $GITHUB_ENV
          fi

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/cicd-env-springboot:${{ env.TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/cicd-env-springboot:${{ github.run_number }}-${{ github.sha }}

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: docker
    environment:
      name: ${{ github.ref_name == 'main' && 'production' || 'homolog' }}

    steps:
      - name: Deploy via Render Deploy Hook
        run: curl -X POST $RENDER_HOOK